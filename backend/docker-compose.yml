version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: formpulse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: formpulse_db
      POSTGRES_USER: formpulse_user
      POSTGRES_PASSWORD: formpulse_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - formpulse-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: formpulse-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - formpulse-network

  # FormPulse Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: formpulse-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://formpulse_user:formpulse_password@postgres:5432/formpulse_db
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: http://localhost:5173
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_SECURE: false
      FROM_EMAIL: noreply@formpulse.local
      FROM_NAME: FormPulse Dev
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
      - api_logs:/app/logs
    depends_on:
      - postgres
      - redis
      - mailhog
    networks:
      - formpulse-network
    command: sh -c "npx prisma migrate dev && npm run dev"

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: formpulse-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - formpulse-network

  # Nginx for reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: formpulse-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - formpulse-network
    profiles:
      - production

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: formpulse-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - formpulse-network
    profiles:
      - tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: formpulse-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - formpulse-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local

networks:
  formpulse-network:
    driver: bridge 